import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import path from "path";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

// Plugin to resolve path aliases
const aliasPlugin = {
    name: 'alias',
    setup(build) {
        build.onResolve({ filter: /^@\// }, args => {
            return {
                path: path.resolve(args.resolveDir, args.path.replace(/^@\//, 'src/'))
            }
        })
    }
}

esbuild.build({
    banner: {
        js: banner,
    },
    entryPoints: ["main.ts"], // Now using the refactored main.ts
    bundle: true,
    platform: "node", // Add platform for Node.js modules
    plugins: [aliasPlugin],
    external: [
        "obsidian",
        "electron",
        "@codemirror/autocomplete",
        "@codemirror/collab",
        "@codemirror/commands",
        "@codemirror/language",
        "@codemirror/lint",
        "@codemirror/search",
        "@codemirror/state",
        "@codemirror/view",
        "@lezer/common",
        "@lezer/highlight",
        "@lezer/lr",
        // Node.js built-in modules
        "node:process",
        "node:stream",
        "node:crypto",
        "node:path",
        "node:fs",
        "node:util",
        ...builtins],
    format: "cjs",
    target: "es2018",
    logLevel: "info",
    sourcemap: prod ? false : "inline",
    treeShaking: true,
    outfile: "main.js",
    resolveExtensions: ['.ts', '.js'],
}).catch(() => process.exit(1));